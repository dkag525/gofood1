const mongoose = require("mongoose");

const mongodbURL =
  "mongodb://GoFood:gofood@ac-plpcdnp-shard-00-00.imsx8kf.mongodb.net:27017,ac-plpcdnp-shard-00-01.imsx8kf.mongodb.net:27017,ac-plpcdnp-shard-00-02.imsx8kf.mongodb.net:27017/gofoodmern?ssl=true&replicaSet=atlas-5kr48f-shard-0&authSource=admin&retryWrites=true&w=majority";

const mongodb = async () => {
  try {
    await mongoose.connect(mongodbURL);
    console.log("Connected to MongoDB");
    const fetched_data = await mongoose.connection.db.collection("food_items");
    fetched_data.find({}).toArray(function (err, data) {
      if (err) console.log(err);
      else console.log(data);
    });
  } catch (error) {
    console.error("Error connecting to MongoDB:", error.message);
  }
};

module.exports = mongodb;

"type": "module",


const express = require("express");
const router = express.Router();
const User = require("../Models/User/User");
const { query, validationResult } = require("express-validator");

router.post(
  "/CreateUser",
  [
    body("email").isEmail(),
    body("name").isEmail(),
    body("password", "Incorrect Password").isLength({ min: 5 }),
  ],

  async (req, res) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      return res.status(400).json({ errors: errors.array() });
    }

    try {
      await User.create({
        name: req.body.name,
        password: req.body.password,
        email: req.body.email,
        location: req.body.location,
      });
      res.json({ success: true });
    } catch (error) {
      console.log(error);
      res.json({ success: false });
    }
  }
);

module.exports = router;
